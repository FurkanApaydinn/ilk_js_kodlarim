// // // // let js = "harika";
// // // // if (js === "harika") alert("JS harika bir dil");
// // // // else alert("JS harika bir dil deÄŸil");
// // // // console.log(40 + 8 + 23 - 10);
// // // // // console.log("Murat");
// // // // console.log(23);
// // // // let isim = "samet";
// // // // console.log(isim);
// // // // console.log(isim);
// // // // console.log(isim);
// // // // // 1. deÄŸiÅŸken tanÄ±mlamalarda _ ve $ iÅŸareti kullanÄ±labilir.
// // // // // 2. DeÄŸiÅŸkenler rakamla baÅŸlamaz Ã¶rneÄŸin 3adi gibi.
// // // // // let $function olarak tanÄ±mlanabilir.
// // // // // DeÄŸiÅŸken isimleri bÃ¼yÃ¼k harfle baÅŸlayamaz.
// // // // // DeÄŸiken adlarÄ± anlamlÄ± olmasÄ± gerekiyor.
// // // // let ilkisim = "mÃ¼hendis";
// // // // let mevcutisim = "Ã–ÄŸretmen";
// // // // console.log(ilkisim);
// // // // console.log(mevcutisim);

// // // // // Ã–rnek challange
// // // // // let Ã¼lke = "TÃ¼rkiye";
// // // // let kÄ±ta = "Asya";
// // // // // let nÃ¼fus = 6000000;
// // // // // console.log(Ã¼lke);
// // // // console.log(kÄ±ta);
// // // // // console.log(nÃ¼fus);
// // // // let jseglenceli = true;
// // // // // typeof deÄŸiÅŸken tÃ¼rÃ¼nÃ¼ tarayÄ±cada gÃ¶stermeye yarar.
// // // // console.log(typeof true);
// // // // // console.log(typeof Ã¼lke);
// // // // // console.log(typeof nÃ¼fus);

// // // // // Ã–rnek challange2
// // // // let adaMÄ± = true;
// // // // let dil = "Ä°ngilizce";
// // // // let nÃ¼fus = 6000000;
// // // // let Ã¼lke = "TÃ¼rkiye";
// // // // console.log(adaMÄ±);
// // // // console.log(typeof dil);
// // // // console.log(typeof nÃ¼fus);
// // // // console.log(typeof Ã¼lke);
// // // // // Ã–rnek Challange -- Boy - kilo hesaplama
// // // // const boymurat = 1.75;
// // // // const boyengin = 1.82;
// // // // const aÄŸÄ±rlÄ±kmurat = 70;
// // // // const aÄŸÄ±rlÄ±kengin = 80;
// // // // console.log(
// // // //   "Murat'Ä±n boyu " + boymurat,
// // // //   "ve kilosu " +
// // // //     aÄŸÄ±rlÄ±kmurat +
// // // //     " " +
// // // //     "Engin'in boyu " +
// // // //     boyengin +
// // // //     " " +
// // // //     "ve kilosu " +
// // // //     aÄŸÄ±rlÄ±kengin
// // // // );
// // // // const vÃ¼cutkitleendeksimurat = aÄŸÄ±rlÄ±kmurat / boymurat ** 2;
// // // // console.log("MuratÄ±n vÃ¼cut kitle endeksi : " + vÃ¼cutkitleendeksimurat);
// // // // const vÃ¼cutkitleendeksiengin = aÄŸÄ±rlÄ±kengin / boyengin ** 2;
// // // // console.log("Enginin vÃ¼cut kitle endeksi : " + vÃ¼cutkitleendeksiengin);
// // // // const bÃ¼yÃ¼kmÃ¼ = vÃ¼cutkitleendeksimurat > vÃ¼cutkitleendeksiengin;
// // // // console.log(bÃ¼yÃ¼kmÃ¼);

// // // // let numOne=3
// // // // let numTwo=3

// // // // console.log(numOne==numTwo)

// // // // let js = "javascript"
// // // // let py="Python"
// // // // console.log(js==py)// eÅŸit olmadÄ±klarÄ± iÃ§in false dÃ¶necek

// // // // let lightOn=true
// // // // let lightOff=false
// // // // console.log(lightOff==lightOn)

// // // // let nums=[// dizeler her zaman 0 dan baÅŸlar
// // // //     1,2,3,"furkan" 
// // // // ]
// // // // nums[0]//1
// // // // nums[1]//2
// // // // nums[2]//3
// // // // nums[3]="ApaydÄ±n" // dizede yer alan 3Ã¼ncÃ¼ elemanÄ± apaydÄ±n olarak deÄŸiÅŸtiriyorum.
// // // // console.log(nums)

// // // // let nums1=[1,2,3]
// // // // let nums2=[1,2,3]
// // // // console.log(nums1==nums2) // eÅŸit olmalarÄ±na raÄŸmen non-primitive(ilkel olmayan veri tÃ¼rÃ¼) olduÄŸu iÃ§in false dÃ¶ndÃ¼recek.
// // // // // console.log(math.round(5.49))// 5 e yuvarlar
// // // // console.log(Math.round(5.5))// 6 ya yuvarlar
// // // // console.log(Math.ceil(5.01)) // 6 ya yuvarlar tavana(yukarÄ±) yuvarla
// // // // console.log(Math.ceil(5.95)) // 6 ya yuvarlar tavana(yukarÄ±) yuvarla
// // // // console.log(Math.floor(5.99)) // tabana(aÅŸaÄŸÄ±) yuvarlar sonuÃ§ 5 
// // // // console.log(Math.min(5,3,1,-5,-20))// liste iÃ§erisinde en kÃ¼Ã§Ã¼k sayÄ±yÄ± bulur.
// // // // console.log(Math.max(5,3,1,-5,-20))// liste iÃ§erisinde en bÃ¼yÃ¼k sayÄ±yÄ± bulur.
// // // // const num1=Math.random()// 0 ile 1 arasÄ±nda rastgele bir sayÄ± oluÅŸtur. 
// // // // console.log(num1)
// // // // Math.floor(Math.random*11) // 0 ile 10 arasÄ±nda rastgele sayÄ± oluÅŸtur.

// // // // let name ='Furkan'
// // // // let surName='ApaydÄ±n'
// // // // let fullName= name + surName//furkan apaydÄ±n

// // // // console.log(`${name} ${surName}`) // furkan apaydÄ±n 

// // // // //string methods uzunluk
// // // // let ad ="furkanapaydin"
// // // // console.log(ad.length) // 6 uzunluk sayÄ±sÄ±nÄ± gÃ¶sterir
// // // // 'furkan'.toUpperCase() // tÃ¼m harfleri bÃ¼yÃ¼k yapar
// // // // 'furkan'.toLocaleLowerCase() // tÃ¼m harfleri kÃ¼Ã§Ã¼k yapar
// // // // ad.substring(2,5) // rka 2. indexten baÅŸla ve kaÃ§ uzunluk alacaÄŸÄ±nÄ± belirtiyoruz.
// // // // let string="javascript"
// // // // console.log(string.substring(0,4))//java
// // // // console.lincog(string.substring(4,10)) // script

// // // // console.log(string.includes("java")) // true // string iÃ§erisinde java var ise true dÃ¶ndÃ¼rÃ¼r. yok ise false dÃ¶ndÃ¼rÃ¼r

// // // // console.log(string.includes("fur"))//false 
// // // // // let str ="Merhaba Furkan, nasÄ±lsÄ±n furkan"
// // // // // str.replaceAll("furkan","ApaydÄ±n")// replace sadece 1 kelimeyi deÄŸiÅŸtirir. ReplecaAll ise tÃ¼m kelimeleri deÄŸiÅŸtirir.
// // // // // let str1="30 days of javascript" 
// // // // // console.log(str.indexOf("d"))//3 belirttiÄŸin deÄŸerin kelime iÃ§erisinde yer sayÄ±sÄ±nÄ± bulur.

// // // // // ------------------2.gÃ¼n challange-----------
// // // // let challange="30 Days Of JavaScript"
// // // // console.log(challange)
// // // // console.log(challange.length)
// // // // console.log(challange.toUpperCase())
// // // // console.log(challange.toLowerCase())
// // // // console.log(challange.substring(2))
// // // // console.log(challange.includes("Script"))
// // // // console.log(challange.split(""))
// // // // console.log(challange.replaceAll("JavaScript","Python"))
// // // // console.log(challange.match(/a/gi))

// // // // // challange JS reduce
// // // // // 1
// // // // const letters = ['h', 'e', 'l', 'l', 'o']
// // // // const greeting=letters.reduce((birleÅŸtirme,greeting)=>{
// // // //   return birleÅŸtirme + greeting;
// // // // });
// // // // console.log(greeting)

// // // // // 2 
// // // // const numbers = [ 100, 3, 4, 1, 2];
// // // // const total = numbers.reduce((Ã§arpma,numbers)=>{
// // // //   return Ã§arpma * numbers
// // // // });

// // // // // AÅŸaÄŸÄ±daki satÄ±rda console.log: 2400 olmalÄ±dÄ±r
// // // // console.log(total); 
// // // // // prompt("Bir sayÄ± giriniz:", "SayÄ± pozitif bir sayÄ± olmalÄ±dÄ±r!") // ikinci deÄŸer promptbox iÃ§erisinde gÃ¶sterilir.
// // // // // let sayi = prompt("bir sayÄ± giriniz :")
// // // // // let result = sayi * 2
// // // // // console.log(result)
// // // // // let silme = confirm("DoÄŸan KurtuluÅŸ yaÅŸlÄ± mÄ± ?")

// // // // // console.log(silme?"DoÄŸan KutuluÅŸ yaÅŸlÄ±  ğŸ˜’":"Olsun DoÄŸan KurtuluÅŸ gene yaÅŸlÄ± ğŸ˜‚ğŸ˜‚")
// // // // const date = new Date()
// // // // let year = date.getFullYear(),
// // // //  month = date.getMonth(),
// // // //  day = date.getDate(),
// // // //  hour = date.getHours(),
// // // //  dayName = date.getDay(),
// // // //  minute = date.getMinutes(),
// // // //  second=date.getSeconds()

// // // // //challange 1
// // // // function checkAge(data) {
// // // //  if (data === { age: 18 }) {
// // // //   console.log("you are an adult");
// // // //  } else if (data == { age: 18 }) {
// // // //   console.log("you are still an adult");
// // // //  } else {
// // // //   console.log("hÄ±mm. you don't have an age I guess");
// // // //  }
// // // // }
// // // // checkAge({ age: 18 })//hÄ±mm. you don't have an age I guess

// // // // //challange 2
// // // // var num = 8;
// // // // var num = 10;
// // // // console.log(num)
// // // // // challange 3 (for) 
// // // // const firstNamesArray = ['Violet', 'Charlie', 'Veruca', 'Mike', 'Augustus'];
// // // // const lastNamesArray = ['Beauregarde', 'Bucket', 'Salt', 'Teavee', 'Gloop'];

// // // // for (let i = 0; i<firstNamesArray.length;i++){
// // // //   console.log(`${firstNamesArray[i]} ${lastNamesArray[i]}`)
// // // // }

// // // // // for (let i = 0; i< firstNamesArray.length; i++){
// // // // // firstNamesArray[i] += " " + lastNamesArray[i]
// // // // // }

// // // // // firstNamesArray.reverse();
// // // // // console.log(firstNamesArray)


// // // //  let months=["ocak","ÅŸubat","mart","nisan","mayÄ±s","haziran","temmuz","aÄŸustos","EylÃ¼l","ekim","kasÄ±m","aralÄ±k"]
// // // // console.log(months.length)
// // // // let days = ["pazar", "pazartesi", "salÄ±", "Ã§arÅŸamba", "perÅŸembe", "cuma", "cumartesi"]
// // // // let humanReadableDate = `${day} ${months[month]} ${year},${days[dayName]},${hour}:${minute}:${second}`
// // // // console.log(humanReadableDate)

// // // // // 3.GÃ¼n Challange
// // // // let firstName = "Furkan",
// // // //  lastName = "ApaydÄ±n",
// // // //  country = "TÃ¼rkiye",
// // // //  city = "Ä°stanbul",
// // // //  Year = 1992
// // // // console.log(typeof(firstName),typeof(lastName),typeof(country),typeof(city),typeof(year))
 
// // // // console.log("10" == 10)//true
// // // // console.log(parseInt(9.8)) // 9
// // // // // doÄŸruluk deÄŸeri saÄŸlayan 3 JavaScript ifadesi;
// // // // console.log("Furkan" == "Furkan")// true
// // // // console.log("ApaydÄ±n" == "ApaydÄ±n")// true
// // // // console.log("AydÄ±n" == "AydÄ±n")//true
// // // // // YanlÄ±ÅŸ deÄŸer saÄŸlayan 3 JavaScript ifadesi;
// // // // console.log("Furkan" == "apaydÄ±n")// false
// // // // console.log("10" === 10)// false
// // // // console.log("AydÄ±n" == 20)//false
// // // // // Not : == 2 eÅŸittirde veri iÃ§eriklerimne bakÄ±yor. === 3 eÅŸittirde veri tÃ¼rlerine bakÄ±yor.
// // // // console.log(4 > 3) // true
// // // // console.log(4 >= 3) //true
// // // // console.log(4 < 3) // false
// // // // console.log(4 == 4) // true
// // // // console.log(4 === 4) // true
// // // // console.log(4 != 4
// // // // )// false
// // // // console.log(4 !== 4
// // // // )// false
// // // // console.log(4 != '4'
// // // // )// false
// // // // console.log(4 == '4'
// // // // )// veri iÃ§eriklerinde 4 olduÄŸu iÃ§in true
// // // // console.log(4 === '4')// veri modellerinde string ve integer olduÄŸu iÃ§in false

// // // // let python = ["p","y","t","h","o","n"]
// // // // console.log(python.length)
// // // // let Jargonun = ["J","a","r","g","o","n","u","n"]
// // // // console.log(Jargonun.length)
// // // // console.log(python == Jargonun) // false

// // // // // true and false
// // // // console.log(4 > 3 && 10 < 12) // true & true = true
// // // // console.log(4 > 3 && 10 > 12) // true & false = false
// // // // console.log(4 > 3 || 10 < 12) // true || true = true
// // // // console.log(4 > 3 || 10 > 12)  // true || false = true
// // // // console.log(!(4 > 3)) // false
// // // // console.log(!(4 < 3)) // true
// // // // console.log(!(false)) // true
// // // // console.log(!(4 > 3 && 10 < 12)) // true & true deÄŸilse false 
// // // // console.log(!(4 > 3 && 10 > 12)) // true & false deÄŸilse true
// // // // console.log(!(4 === '4')) // false deÄŸilse true

// // // // // challange 4-- 5-15 sayÄ±larÄ±nÄ± console.log yapacak bir while dÃ¶ngÃ¼sÃ¼ yazÄ±n. Bir deÄŸiÅŸken i tanÄ±mladÄ±ÄŸÄ±nÄ±zdan emin olun (let anahtar sÃ¶zcÃ¼ÄŸÃ¼nÃ¼ kullanÄ±n) ve bunu while dÃ¶ngÃ¼sÃ¼nden Ã¶nce baÅŸlatÄ±n.
// // // // let i = 5
// // // // while (i <= 15) {
// // // //  console.log(i)
// // // //  i++
// // // // }


// // // // // Challange 5-- AynÄ±sÄ±nÄ± yapacak bir for dÃ¶ngÃ¼sÃ¼ yazÄ±n.
// // // // for (x = 5; x <= 15; x++){
// // // //  console.log(x)

// // // // }

// // // // // Challange 6-- 1. alÄ±ÅŸtÄ±rmadakiyle aynÄ± while dÃ¶ngÃ¼sÃ¼nÃ¼ yazÄ±n ancak 15'ten 5'e kadar olan sayÄ±larÄ± geriye doÄŸru yazdÄ±racak ÅŸekilde yazÄ±n. Bunun iÃ§in artÄ±rma operatÃ¶rÃ¼ yerine azaltma operatÃ¶rÃ¼nÃ¼ kullanmanÄ±z gerekecektir. Sonsuz bir dÃ¶ngÃ¼ oluÅŸturmamak iÃ§in koÅŸulunuzu deÄŸiÅŸtirirken Ã§ok dikkatli olmalÄ±sÄ±nÄ±z!

// // // // let y = 15
// // // // while (y <= 5) {
// // // //  console.log(y)
// // // //  y--
// // // // }


// // // // //Challange 7-- AynÄ±sÄ±nÄ± for dÃ¶ngÃ¼sÃ¼ iÃ§in yapÄ±n 15'ten 5'e geriye doÄŸru yazdÄ±rÄ±lacak ÅŸekilde deÄŸiÅŸtirin. Yine durumunuza dikkat edin ve sonsuz bir dÃ¶ngÃ¼den kaÃ§Ä±nÄ±n.

// // // // for (z = 15; z <= 5; z--){
// // // //  console.log(z)
// // // // }



// // // // // Challange 8 Bonus-- for dÃ¶ngÃ¼nÃ¼zÃ¼ Drill 2'den yeniden yazabilir misiniz, bÃ¶ylece 5, sonra 6, sonra 7, sonra 8 vb. konsola kaydetmek yerine yalnÄ±zca tek sayÄ±larÄ± konsola kaydedebilir miyiz? Yani ilk yinelemede konsola 5, ikinci yinelemede 7, ardÄ±ndan 9, sonra 11, sonra 13, sonra 15 ve orada durmalÄ±dÄ±r.

// // // // for (k = 5; k <= 5; z += 2){
// // // //  console.log(k)
// // // // }

// // // // // TÃ¼m zorluklarÄ±nÄ±z iÃ§in aÅŸaÄŸÄ±daki nesne dizisiyle Ã§alÄ±ÅŸacaksÄ±nÄ±z. Diziyi hiÃ§ deÄŸiÅŸtirmeyin.
// // // // const planets = [
// // // //     { 
// // // //         id: 0,
// // // //         name: "Mercury",
// // // //         numOfMoons: 0
// // // //     },
// // // //     {
// // // //         id: 1,
// // // //         name: "Venus",
// // // //         numOfMoons: 0
// // // //     },
// // // //     {
// // // //         id: 2,
// // // //         name: "Earth",
// // // //         numOfMoons: 1
// // // //     },
// // // //     {
// // // //         id: 3,
// // // //         name: "Mars",
// // // //         numOfMoons: 2
// // // //     },
// // // //     {
// // // //         id: 4,
// // // //         name: "Jupiter",
// // // //         numOfMoons: 79
// // // //     },
// // // //     {
// // // //         id: 5,
// // // //         name: "Saturn",
// // // //         numOfMoons: 62
// // // //     },
// // // //     {
// // // //         id: 6,
// // // //         name: "Uranus",
// // // //         numOfMoons: 27
// // // //     },    
// // // //     {
// // // //         id: 7,
// // // //         name: "Neptune",
// // // //         numOfMoons: 14
// // // //     }, 
// // // // ]

// // // // // Challenge aÅŸaÄŸÄ±da baÅŸlÄ±yor.

// // // // // MAP CHALLENGE

// // // // // YalnÄ±zca gezegen adlarÄ±ndan oluÅŸan yeni bir dizi oluÅŸturmak iÃ§in map kullanÄ±n, hepsi bÃ¼yÃ¼k harfli olmalÄ±dÄ±r

// // // // const planetNamesUpperCased = planets.map((a) => a.name.toUpperCase())
// // // // // The console should say: ["MERCURY", "VENUS", "EARTH", "MARS", "JUPITER", "SATURN", "URANUS", "NEPTUNE"]
// // // // console.log(planetNamesUpperCased);

// // // // // FILTER CHALLENGE 1
// // // // // planetId'de yalnÄ±zca belirtilen kimliÄŸe sahip nesneyi filtreleyin, ardÄ±ndan adÄ±nÄ± console.log'a yazdÄ±rÄ±n. Bu meydan okuma sizin iÃ§in kÄ±smen tamamlandÄ±. Buradaki /* kodunuz */ metnini kaldÄ±rÄ±n ve kendi kodunuzla deÄŸiÅŸtirin.
// // // // const planetId = 7;
// // // // const planetNameById = planets.filter((a)=>a.id===planetId)[0];
// // // // // Sondaki [0] neden gerekli? Devam etmeden Ã¶nce bunu iyice dÃ¼ÅŸÃ¼ndÃ¼ÄŸÃ¼nÃ¼zden ve anladÄ±ÄŸÄ±nÄ±zdan emin olun.
// // // // // Konsol ÅŸunu yazdÄ±rmalÄ±dÄ±r: "NeptÃ¼n"
// // // // console.log(planetNameById.name);

// // // // // FILTER CHALLENGE 2
// // // // // planetName'de yalnÄ±zca belirtilen name'e sahip nesneyi filtreleyin, ardÄ±ndan numOfMoons'unu console.log'a kaydedin - template literal sÃ¶zdizimini kullanÄ±n.
// // // // const planetName = "Earth";
// // // // const planetNumMoonsByName = planets.filter((a)=> a.name===planetName)[0]
// // // // // Konsolda ÅŸÃ¶yle demelidir: "Earth's number of moons is: 1"
// // // // console.log( `${planetNumMoonsByName.name}''${planetNumMoonsByName.numOfMoons}'`);

// // // // // REDUCE CHALLENGE
// // // // // GÃ¼neÅŸ sistemimizdeki tÃ¼m aylarÄ±n toplamÄ±nÄ± moonsTotal adlÄ± bir deÄŸiÅŸkende toplamak iÃ§in reduce kullanÄ±n.
// // // // const moonsTotal = planets.reduce((totalM,planetM)=> totalM + planetM.numOfMoons,0)
// // // // // Konsolda ÅŸu yazmalÄ±dÄ±r :   185
// // // // console.log(moonsTotal); 

// // // // // YÃ–NTEM ZÄ°NCÄ°RLEME CHALLENGE 
// // // // // Ä°lk olarak  yalnÄ±zca uydularÄ± olan gezegenleri filtrelemek iÃ§in filter yÃ¶ntemini kullanÄ±n.
// // // // // ArdÄ±ndan  yalnÄ±zca 1 veya daha fazla uydusu olan gezegenlerin adlarÄ±nÄ± iÃ§eren yeni bir dizi oluÅŸturmak iÃ§in map yÃ¶ntemini kullanÄ±n.
// // // // // Bunu yÃ¶ntem zincirini kullanarak yapÄ±n.
// // // // const planetNamesWithMoons = planets.filter((a)=> a.numOfMoons>0)
// // // // const yeni=planetNamesWithMoons.map((a)=>a.name)
// // // // // Konsolda ÅŸÃ¶yle yazmalÄ±dÄ±r: ["Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune"]
// // // // console.log(yeni);
// // // // //filter metodu
// // // // const numbers = [12, 13, 14, 130, 44]
// // // // const bÃ¼yÃ¼kMÃ¼ = numbers.filter(sayi => sayi > 10)
// // // // console.log(bÃ¼yÃ¼kMÃ¼) //10 dan bÃ¼yÃ¼k olan sayÄ±larÄ± filtreleme

// // // // // karakter sayÄ±sÄ± 4 den kÃ¼Ã§Ã¼k olanlarÄ± filtreleme

// // // // const names = ["furkan", "cem", "ece", "burak", "gÃ¼l", "mehmet", "NeÅŸe"]
// // // // console.log(names.filter(kÃ¼Ã§Ã¼k=>kÃ¼Ã§Ã¼k.length<4))

// // // // const users = [
// // // //   {
// // // //     name: "furkan",
// // // //     age:30
// // // //   },
// // // //   {
// // // //     name: "BarÄ±ÅŸ",
// // // //     age:27
// // // //   },
// // // //   {
// // // //     name: "DoÄŸan",
// // // //     age: 36
    
// // // //   },
// // // //   {
// // // //     name: "HÃ¼seyin",
// // // //     age: 28
    
// // // //   }
// // // // ]
// // // // console.log(users.filter(user => user.age >= 25))
// // // // console.log(names.filter(name => name.includes("ce"))) // iÃ§erisinde ce geÃ§enleri listele


// // // // //includes metodu--iÃ§erisinde deÄŸer geÃ§iyor mu diye kontrol ediyor.

// // // // const numbers1 = [1, 3, 5, 7]
// // // // console.log(numbers1.includes(8)) // 8 olmadÄ±ÄŸÄ± iÃ§in false dÃ¶necek
// // // // const addNumber = number => {numbers.push(number)}
// // // // addNumber(5)
// // // // addNumber(6)
// // // // addNumber(8)
// // // // console.log(numbers)
// // // // // Map Metodu
// // // // const numbers2 = [1, 4, 5]
// // // // const result2 = numbers2.map(number => number * 2)
// // // // console.log(result2) // dize iÃ§erisindeki sayÄ±larÄ± 2 ile Ã§arpma
 
// // // // const users2 = [
// // // //   {
// // // //     name: "furkan",
// // // //     surname: "ApaydÄ±n",
// // // //     age:30
// // // //   },
// // // //   {
// // // //     name: "DoÄŸan",
// // // //     surname: "KurtuluÅŸ",
// // // //     age:36
// // // //   }
// // // // ]
// // // // console.log(users2.map(user => user.age * 2)) // age objesine atadÄ±ÄŸÄ±mÄ±z deÄŸerleri 2 ile Ã§arpma
// // // // console.log(users2.map(user => user.name.toUpperCase()))

// // // // const pets = ["goldfish", "dog", "turtle", "tiger"];
// // // // const a = pets.filter(pet => pet.length <= 5)
// // // // console.log(a)
// // // // const b = pets.filter(pet => pet[0]=="t")
// // // // console.log(b)
// // // // const numbers4 = [3, 7, 4, 5, 10];
// // // // const c = numbers4.filter(number => number >= 4)
// // // // console.log(c)
// // // // const d = numbers4.filter(number => number % 2 == 0)
// // // // console.log(d)

// // // // const drinkOrders = [
// // // //   { id: 0, customerName: 'Zachary', drinkName: 'Dirty Martini'},
// // // //   { id: 1, customerName: 'Juan', drinkName: 'Zombie'},
// // // //   { id: 2, customerName: 'Kayla', drinkName: 'Mojito'},
// // // //   { id: 3, customerName: 'Zachary', drinkName: 'Mojito'}
// // // // ]

// // // // // TÃ¼m gÃ¶revler drinkOrders dizisini kullanacak.

// // // // // Challenge 1 
// // // // //  customerName 'Juan' olan  ilk nesneyi almak iÃ§in find() yÃ¶ntemini kullanÄ±n.
// // // // console.log(drinkOrders.find((order) => order.customerName === 'Juan'));


// // // // // Challenge 2 
// // // // // drinkName olarak 'Mojito'yu iÃ§eren drinkOrders dizisindeki ilk nesneyi almak iÃ§in find() yÃ¶ntemini kullanÄ±n.
// // // // // Kodunuzu bu satÄ±rÄ±n altÄ±na yazÄ±n.
// // // // console.log(drinkOrders.find((a)=>a.drinkName==="Mojito"))


// // // // // Challenge 3 
// // // // // drinkOrders dizisinden id'si 3 olan nesneyi almak iÃ§in find() yÃ¶ntemini kullanÄ±n .ArdÄ±ndan tÃ¼m nesne yerine yalnÄ±zca onu sipariÅŸ eden mÃ¼ÅŸterinin adÄ±nÄ± console.log'a alÄ±n. Ä°pucu: Nesneyi almak iÃ§in find() kullanÄ±n  ardÄ±ndan id'ye eriÅŸmek iÃ§in nokta gÃ¶sterimini kullanÄ±n.
// // // // // Kodunuzu bu satÄ±rÄ±n altÄ±na yazÄ±n.

// // // // console.log(drinkOrders.find((b)=> b.id===3).customerName)


// // // // // Bonus 
// // // // // YalnÄ±zca 'Zachary' mÃ¼ÅŸteri adÄ±na sahip nesneleri iÃ§eren yeni bir dizi oluÅŸturmak iÃ§in filter() yÃ¶ntemini kullanÄ±n. ArdÄ±ndan drinkName'i   'Mojito' olan nesnenin id'sini almak iÃ§in bu yeni dizide find() yÃ¶ntemini kullanÄ±n.
// // // // // Kodunuzu bu satÄ±rÄ±n altÄ±na yazÄ±n.

// // // // customerNameZ=drinkOrders.filter((c)=>c.customerName==="Zachary");
// // // // console.log(drinkOrders.find((d)=>d.drinkName==="Mojito").id)

// // // const button = document.querySelector('button');
// // // const numberElm = document.querySelector('#number');
// // // const resultElm = document.querySelector('#result');

// // // button.addEventListener('click', function () {
// // //   resultElm.textContent = numberElm.value > 100 ? 'Ã‡ok BÃ¼yÃ¼k' : ( numberElm.value < 100 ? 'Ã‡ok KÃ¼Ã§Ã¼k' : 'Harika');
// // // });

// // // //---------------------------------------------------------------------------------------------//
// // // const insanlar = [{
// // //    isim: 'Furkan',
// // //    yaÅŸ: 36
// // // }, {
// // //    isim: 'Ä°bo',
// // //    yaÅŸ: 41
// // // }, {
// // //    isim: 'Samet',
// // //    yaÅŸ: 27
// // // }];

// // // const otuzYaÅŸÃœstÃ¼Ä°nsanlar = insanlar.every((insan) => {
// // //    return insan.yaÅŸ > 30;
// // // });

// // // const otuzYaÅŸÃœstÃ¼BazÄ±Ä°nsanlar = insanlar.some((insan) => {
// // //    return insan.yaÅŸ > 30;
// // // });

// // // console.log(otuzYaÅŸÃœstÃ¼Ä°nsanlar ); 
// // // console.log(otuzYaÅŸÃœstÃ¼BazÄ±Ä°nsanlar ); 


// // // if(otuzYaÅŸÃœstÃ¼Ä°nsanlar ) {
// // //    console.log('Lorem ipsum!!'); 
// // // }

// // // if(otuzYaÅŸÃœstÃ¼BazÄ±Ä°nsanlar ) {
// // //    console.log('Lorem ipsum!!'); 
// // // }


// // let yourAge = parseInt(prompt("KaÃ§ yaÅŸÄ±ndasÄ±n?"))
// // // if (yourAge > 18) {
// // //  console.log("Araba kullanacak yaÅŸtasÄ±n.")
// // // } else {

// // //  console.log(`araba kullanmak iÃ§in ${yourAge-18}yÄ±l kaldÄ±`)
// // // }
// // // const yaÅŸ = function (doÄŸumYÄ±lÄ±) {
// // // return 2022-doÄŸumYÄ±lÄ±-18
// // // }

// // //benim yaÅŸÄ±m ile girilen yaÅŸÄ± karÅŸÄ±laÅŸtÄ±rma
// // let myAge = 30
// // if (myAge > yourAge) {
// //  console.log(`benim yaÅŸÄ±m senin yaÅŸÄ±ndan ${myAge-yourAge} daha bÃ¼yÃ¼k`)
// // } else {
// //  console.log(`senin yaÅŸÄ±n benim yaÅŸÄ±mdan ${yourAge-myAge} daha bÃ¼yÃ¼k`)
// // }

// // // 
// // let a = 4
// // let b = 3
// // if (a > b) {
// //  console.log("a b  den bÃ¼yÃ¼ktÃ¼r")
// // } else {
// //  console.log("a b den kÃ¼Ã§Ã¼ktÃ¼r")
// // }
// // // ternary operator.
// // console.log(a > b ? "a b den bÃ¼yÃ¼ktÃ¼r" : "a b den kÃ¼Ã§Ã¼ktÃ¼r")

// // // Ã§ift sayÄ± mÄ±?

// // let result = parseInt(prompt("bir sayÄ± giriniz :"))
// // if (result % 2 === 0) {
// //  console.log("Ã§ift sayÄ±")
// // } else {
// //  console.log("tek sayÄ±")
// // }
// // ---------------------------------------- insertAdjacentHTML() Examples-----------------------------------------
// let el=document.getElementById("el"),
//     btns=document.querySelector(".btns").querySelectorAll("button");
// for (let i=0; i<btns.length;i++){
//   (function(index){
//     btns[index].addEventListener("click",function(){
//       el.insertAdjacentHTML(btns[index].innerHTML,""+btns[index].innerHTML + "");
//     });
//   })(i);
// }
/* Challenge-1 - yeni bir 'filozoflar' dizisi oluÅŸturmak iÃ§in aÅŸaÄŸÄ±daki iki diziyi yayÄ±n */
const antikYunanFilozoflarÄ± = ["Hypatia", "Socrates", "Zeno"];
const modernFilozoflar = ["Allan Gibbard", "Susan Haack", "Judith Butler"];

const filozoflar= [...antikYunanFilozoflarÄ±,...modernFilozoflar];
console.log(filozoflar);

/*Challenge-2 - verilen StudentToAdd nesnesini iÃ§eren yeni bir 'newStudents' dizisi oluÅŸturmak iÃ§in aÅŸaÄŸÄ±daki diziyi yayÄ±n */
const STUDENTS= [
     {isim: "Kaya" },
     {isim: "Eda" },
     {isim: "Mesut" },
];
const studentToAdd = { isim: "Melis" };

const newStudents = [studentToAdd,...STUDENTS];
console.log(newStudents);

/* Challenge 3 - Challenge 2'de oluÅŸturduÄŸunuz newStudents dizisiyle students Ã¶zelliÄŸini gÃ¼ncelleyen yeni bir nesne oluÅŸturmak iÃ§in aÅŸaÄŸÄ±daki nesneyi yayÄ±n */
const reactCourse= {
     kursSÃ¼resi: 7,
     isim: "React",
     students: STUDENTS
}

const reactCourseUpdated = {reactCourse,...newStudents };
console.log(reactCourseUpdated);
